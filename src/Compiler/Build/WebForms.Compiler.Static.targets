<Project>

  <PropertyGroup>
    <_HasWebFormsError>false</_HasWebFormsError>
  </PropertyGroup>

  <ItemGroup>
    <WebFormsRegisteredPrefix Include="webopt!Microsoft.AspNet.Web.Optimization.WebForms!WebForms.Optimization" />
    <WebFormsRegisteredPrefix Include="webopt!System.Web.Optimization!WebForms.Optimization" />
  </ItemGroup>

  <!--
    This target is the beginning of the WebForms compilation system. It hooks into MSBuild after the CoreCompile target as we need the main assembly
    to be passed into the compilation.
  -->
  <Target Name="WebFormsCompilation" AfterTargets="CoreCompile" BeforeTargets="GetCopyToOutputDirectoryItems">
    <!-- Configure some properties for use during compilation -->
    <PropertyGroup>
      <_WebFormsIsDebug>false</_WebFormsIsDebug>
      <_WebFormsInputDir>$(MSBuildProjectDirectory)</_WebFormsInputDir>
      <_WebFormsIsDebug Condition=" '$(Configuration.ToUpper())' == 'DEBUG' ">true</_WebFormsIsDebug>
      <_WebFormsTempDir>$(IntermediateOutputPath)webforms_compile/</_WebFormsTempDir>
      <_WebFormsTempDir Condition="!$([System.IO.Path]::IsPathRooted($(_WebFormsTempDir)))">$(ProjectDir)$(_WebFormsTempDir)</_WebFormsTempDir>
      <_WebFormsTempDir>$([MSBuild]::NormalizeDirectory($(_WebFormsTempDir)))</_WebFormsTempDir>
      <_WebFormsPagesFileName>webforms.pages.json</_WebFormsPagesFileName>
      <_WebFormsPagesFile>$(_WebFormsTempDir)/$(_WebFormsPagesFileName)</_WebFormsPagesFile>
    </PropertyGroup>

    <!-- Identify the inputs/outputs for the compiler so msbuild will know if things are out of date -->
    <ItemGroup>
      <_WebFormsCompilerInput Include="@(WebFormsFiles)" />
      <_WebFormsCompilerInput Include="@(WebFormsDesignerFiles)" />
      <_WebFormsCompilerInput Include="@(WebFormsCodeBehindFiles)" />
      <_WebFormsCompilerInput Include="@(WebFormsCodeBehindFiles)" />
      <_WebFormsCompilerInput Include="@(IntermediateAssembly)" />
    </ItemGroup>

    <!-- This converts the aspx/ascx/etc files into the expected path for the resulting dll -->
    <ItemGroup>
      <_WebFormsCompilerOutput Include="$(_WebFormsTempDir)ASP.$([System.String]::Copy('%(WebFormsFiles.RecursiveDir)%(FileName)%(Extension)').Replace('\\', '_').Replace('/', '_')).dll" />
    </ItemGroup>

    <!-- Add the known input/outputs so VS can know about them for fast update checker -->
    <ItemGroup>
      <UpToDateCheckInput Include="@(_WebFormsCompilerInput)" />
      <UpToDateCheckOutput Include="@(_WebFormsCompilerOutput)" />
    </ItemGroup>

  </Target>

  <!--
    This target invokes aspnet_compiler. Because the commandline can become too long for some shells, we use an rsp file to pass them to the program. This target should only be called
    if the webforms files (and the main assembly) are out of date with the outputs.
  -->
  <Target Name="InvokeAspNetCompiler" Inputs="@(_WebFormsCompilerInput)" Outputs="@(_WebFormsCompilerOutput)" AfterTargets="WebFormsCompilation" Condition="Exists($(AspNetCompilePath))">
    <RemoveDir Directories="$(_WebFormsTempDir)" />

    <!-- Generate a .rsp file for the compilation that we can pass into the compiler for all the command line arguments -->
    <PropertyGroup>
      <__AspNetCompileRspFilePath>$(_WebFormsTempDir)input.rsp</__AspNetCompileRspFilePath>
    </PropertyGroup>

    <ItemGroup>
      <__AspNetCompileRsp Include="-p &quot;$(_WebFormsInputDir)&quot;" />
      <__AspNetCompileRsp Condition="$(_WebFormsIsDebug)" Include="-d" />
      <__AspNetCompileRsp Include="&quot;$(_WebFormsTempDir)&quot;" />
      <__AspNetCompileRsp Include="-r &quot;%(ReferencePath.Identity)&quot;" />
      <__AspNetCompileRsp Include="-r &quot;%(IntermediateAssembly.Identity)&quot;" />
      <__AspNetCompileRsp Include="--prefix &quot;%(WebFormsRegisteredPrefix.Identity)&quot;" />
    </ItemGroup>

    <WriteLinesToFile File="$(__AspNetCompileRspFilePath)" Lines="@(__AspNetCompileRsp)" Overwrite="true" />

    <!-- Invoke aspnet_compiler with the rsp file -->
    <Exec Command="dotnet $(AspNetCompilePath) @$(__AspNetCompileRspFilePath)" ContinueOnError="true" />

    <!-- aspnet_compiler outputs a error file if there were compilation errors -->
    <PropertyGroup>
      <_HasWebFormsError Condition="!Exists('$(_WebFormsPagesFile)')">true</_HasWebFormsError>
    </PropertyGroup>
  </Target>

  <!--
    This target is used to collect all the dll/pdbs generated by the compiler and add them to the output.
  -->
  <Target Name="CollectWebFormsOutput" AfterTargets="InvokeAspNetCompiler" Condition="!$(_HasWebFormsError)" BeforeTargets="_CopyFilesMarkedCopyLocal;GetCopyToOutputDirectoryItems;GetCopyToPublishDirectoryItems">
    <ItemGroup>
      <AspxOutputFiles Include="$(_WebFormsTempDir)/*.pdb" />
      <AspxOutputFiles Include="$(_WebFormsTempDir)/*.dll" />

      <FileWrites Include="@(AspxOutputFiles)" />
      <FileWrites Include="$(_WebFormsPagesFile)" />

      <ContentWithTargetPath Include="$(_WebFormsPagesFile)"
                             TargetPath="$(TargetName).webforms.json"
                             CopyToOutputDirectory="PreserveNewest"
                             CopyToPublishDirectory="PreserveNewest" />
      <ContentWithTargetPath Include="@(AspxOutputFiles)"
                             TargetPath="webforms/%(FileName)%(Extension)"
                             CopyToOutputDirectory="PreserveNewest"
                             CopyToPublishDirectory="PreserveNewest" />
    </ItemGroup>
  </Target>

  <Target Name="NotifyGenericWebFormsCompilationError" AfterTargets="InvokeAspNetCompiler" BeforeTargets="NotifyWebFormsCompilationError" Condition="$(_HasWebFormsError)">
    <Error Text="There was an error compiling WebForms assets." />
  </Target>

  <Target Name="AspNetCompilerNotFound" AfterTargets="WebFormsCompilation" Condition="!Exists($(AspNetCompilePath))">
    <Error Text="Could not find aspnet_compiler: $(AspNetCompilePath)" />
  </Target>

</Project>
